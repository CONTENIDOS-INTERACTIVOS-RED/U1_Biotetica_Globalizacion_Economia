{"remainingRequest":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/src/views/curso/Tema4.vue?vue&type=template&id=3fcb1358&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/src/views/curso/Tema4.vue","mtime":1733589989260},{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Biotetica_Globalizacion_Economia/U1_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOic0LiBCaW/DqXRpY2EgeSBzdSByZWxhY2nDs24gY29uIGxhIHNvc3RlbmliaWxpZGFkLCBsYSBlcXVpZGFkIHNvY2lhbCB5IGxvcyBkZXJlY2hvcyBodW1hbm9zJ319KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbnRhaW5lciB0YXJqZXRhIHRhcmpldGEtLWJsYW5jYSBwLTQgcC1tZC01In0sW192bS5fbSgwKSxfdm0uX20oMSksX3ZtLl9tKDIpLF92bS5fbSgzKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRWplbXBsb3M6IildKSxfdm0uX20oNCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtY2VudGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiQWhvcmEsIGxvcyBkZXNhZsOtb3MgYmlvw6l0aWNvcyBhc29jaWFkb3MgYSBsYSBzb3N0ZW5pYmlsaWRhZCwgc29uOiIpXSksX2MoJ0Fjb3JkaW9uQScse2F0dHJzOnsidGlwbyI6ImIifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkNhbWJpbyBjbGltw6F0aWNvIn19LFtfYygncCcsW192bS5fdigiRWwgY2FtYmlvIGNsaW3DoXRpY28gcmVwcmVzZW50YSB1bm8gZGUgbG9zIG1heW9yZXMgZGVzYWbDrW9zIGJpb8OpdGljb3MgYWN0dWFsZXMsIGNvbiB1biBpbXBhY3RvIGRpcmVjdG8gZW4gbGEgc2FsdWQgZ2xvYmFsLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJBdW1lbnRvIGRlIGVuZmVybWVkYWRlcyJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkVsIGF1bWVudG8gZGUgZW5mZXJtZWRhZGVzIHJlc3BpcmF0b3JpYXMsIGxhIGVzY2FzZXogZGUgYWxpbWVudG9zIHkgYWd1YSwgeSBlbCBkZXNwbGF6YW1pZW50byBkZSBjb211bmlkYWRlcyB2dWxuZXJhYmxlcyBzb24gYWxndW5vcyBkZSBsb3MgZWZlY3RvcyBuZWdhdGl2b3MgcXVlIHBsYW50ZWFuIGRpbGVtYXMgYmlvw6l0aWNvcywgZXhpZ2llbmRvIHVuYSByZXNwdWVzdGEgaW5tZWRpYXRhIHkgY29sYWJvcmF0aXZhIHBvciBwYXJ0ZSBkZSBsYSBjb211bmlkYWQgaW50ZXJuYWNpb25hbC4iKV0pXSldKV0sMSksX3ZtLl9tKDUpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfdm0uX20oNiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTGEgc29zdGVuaWJpbGlkYWQgcHJlc2VudGEgZGl2ZXJzb3MgZGVzYWbDrW9zIGJpb8OpdGljb3MgcXVlIHJlcXVpZXJlbiB1bmEgcmVmbGV4acOzbiBwcm9mdW5kYS4gUG9yIGVqZW1wbG8sIGVsIHZpZGVvIOKAnMOJdGljYSBhbWJpZW50YWwgZSBoaXN0b3JpYSBhbWJpZW50YWwgKDIwMjEp4oCdOyBleHBsb3JhIGPDs21vIGxvcyBwcmluY2lwaW9zIMOpdGljb3Mgc2UgYXBsaWNhbiBhIGxvcyBwcm9ibGVtYXMgZGUgdXNvIHkgY29uc2VydmFjacOzbiBkZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzLCBpbnZpdGFuZG8gYSBsb3MgZXNwZWN0YWRvcmVzIGEgY29uc2lkZXJhciBsYXMgaW1wbGljYWNpb25lcyBkZSBzdXMgZGVjaXNpb25lcy4iKV0pLF9jKCdhJyx7c3RhdGljQ2xhc3M6ImFuZXhvIG1iLTQgYmctd2hpdGUgdy1maXQiLGF0dHJzOnsiaHJlZiI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9VDlsd0NkTEtYeFUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXZpZGVvLnN2ZyIpfX0pXSksX3ZtLl9tKDcpXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIlVuIGNhc28gZXNwZWPDrWZpY28gZG9uZGUgbGEgc29zdGVuaWJpbGlkYWQgeSBsYSDDqXRpY2EgZW50cmFuIGVuIGNvbmZsaWN0byBlcyBlbiBsYSBwcm9kdWNjacOzbiBkZSBhbGltZW50b3MuIEVuIGVsIHZpZGVvIOKAnMK/UXXDqSB0aWVuZSBxdWUgdmVyIGxhIHByb2R1Y2Npw7NuIGluZHVzdHJpYWwgZGUgY2FybmUgY29uIGxhIGNyaXNpcyBjbGltw6F0aWNhPyAoMjAyMCnigJ0sIHNlIHByZXNlbnRhbiBlamVtcGxvcyBkZSBjw7NtbyBsYSBwcm9kdWNjacOzbiBhZ3LDrWNvbGEgcHVlZGUgYWZlY3RhciB0YW50byBhbCBtZWRpbyBhbWJpZW50ZSBjb21vIGEgbGEgc2FsdWQgaHVtYW5hLCBnZW5lcmFuZG8gZGlsZW1hcyBxdWUgZGViZW4gc2VyIGFib3JkYWRvcyBkZXNkZSB1bmEgcGVyc3BlY3RpdmEgYmlvw6l0aWNhLiIpXSksX2MoJ2EnLHtzdGF0aWNDbGFzczoiYW5leG8gbWItNCBiZy13aGl0ZSB3LWZpdCIsYXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1zbFFuRUQ3UE0tWSIsInRhcmdldCI6Il9ibGFuayIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19faWNvbm8iLHN0eWxlOih7J2JhY2tncm91bmQtY29sb3InOiAnI0ZDREZEQid9KX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8tdmlkZW8uc3ZnIil9fSldKSxfdm0uX20oOCldKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRWwgY2FtYmlvIGNsaW3DoXRpY28gdGFtYmnDqW4gcGxhbnRlYSBpbXBvcnRhbnRlcyBwcmVndW50YXMgYmlvw6l0aWNhcy4g4oCcRWwgdmlkZW8gTGFzIGNsYXZlcyBkZWwgY2FtYmlvIGNsaW3DoXRpY28gKDIwMTkp4oCdIGFuYWxpemEgY8OzbW8gbGFzIGNvbnNlY3VlbmNpYXMgZGVsIGNhbWJpbyBjbGltw6F0aWNvIGFmZWN0YW4gYSBsYXMgcG9ibGFjaW9uZXMgbcOhcyB2dWxuZXJhYmxlcyB5IGPDs21vIGVzdG8gZGViZXLDrWEgaW5mbHVpciBlbiBudWVzdHJhcyBkZWNpc2lvbmVzIMOpdGljYXMuIildKSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVBQNGhJNnkyWGhrIiwidGFyZ2V0IjoiX2JsYW5rIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImFuZXhvX19pY29ubyIsc3R5bGU6KHsnYmFja2dyb3VuZC1jb2xvcic6ICcjRkNERkRCJ30pfSxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby12aWRlby5zdmciKX19KV0pLF92bS5fbSg5KV0pXSldKSxfdm0uX20oMTApLF9jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJMYSBlcXVpZGFkIHNvY2lhbCBkZW50cm8gZGUgbGEgYmlvw6l0aWNhLCBhYm9nYSBwb3IgbGEganVzdGljaWEgZW4gbGEgZGlzdHJpYnVjacOzbiBkZSByZWN1cnNvcyB5IG9wb3J0dW5pZGFkZXMuIEVzIGltcG9ydGFudGUgcXVlIHRvZGFzIGxhcyBwZXJzb25hcywgaW5kZXBlbmRpZW50ZW1lbnRlIGRlIHN1IHNpdHVhY2nDs24gZWNvbsOzbWljYSBvIHNvY2lhbCwgdGVuZ2FuIGFjY2VzbyBhIHVuYSBhdGVuY2nDs24gbcOpZGljYSBkZSBjYWxpZGFkIHkgYSBsb3MgYmVuZWZpY2lvcyBkZWwgcHJvZ3Jlc28gY2llbnTDrWZpY28uICIpXSksX3ZtLl9tKDExKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRWplbXBsb3M6IildKSxfdm0uX20oMTIpLF92bS5fbSgxMyksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkxvcyBkZXJlY2hvcyBodW1hbm9zIGVuIGVsIGNvbnRleHRvIGJpb8OpdGljbywgZXN0w6FuIGludHLDrW5zZWNhbWVudGUgbGlnYWRvcyBhIGxhIGRpZ25pZGFkIGh1bWFuYS4gVG9kbyBpbmRpdmlkdW8gdGllbmUgZWwgZGVyZWNobyBhIHJlY2liaXIgdW4gdHJhdG8ganVzdG8geSBhIHF1ZSBzdSB2aWRhIHkgYmllbmVzdGFyIHNlYW4gcmVzcGV0YWRvcy4gTGEgYmlvw6l0aWNhLCBlbiBlc3RlIHNlbnRpZG8sIHNlIGNvbnZpZXJ0ZSBlbiB1biBwdWVudGUgcXVlIHByb3RlZ2UgeSBwcm9tdWV2ZSBlc3RvcyBkZXJlY2hvcyBmdW5kYW1lbnRhbGVzLCBjb21vIGVsIGRlcmVjaG8gYSBsYSB2aWRhLCBhIGxhIHNhbHVkIHkgYWwgYWNjZXNvIGEgbG9zIGJlbmVmaWNpb3MgZGUgbG9zIGF2YW5jZXMgY2llbnTDrWZpY29zLiBTaWx2ZWlyYSBHb3Jza2kgeSBNw6luZGV6IEJhaWdlcyAoMjAxNSkgZGVzdGFjYW4gbGEgaW1wb3J0YW5jaWEgZGVsIGRlcmVjaG8gZW4gbGEgbm9ybWF0aXZpemFjacOzbiBkZSBsb3MgcHJpbmNpcGlvcyDDqXRpY29zIHF1ZSBndcOtYW4gZWwgY29tcG9ydGFtaWVudG8gaHVtYW5vIGVuIHVuIGNvbnRleHRvIGdsb2JhbGl6YWRvLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX3ZtLl9tKDE0KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG9yZGVyLWxnLTEifSxbX3ZtLl9tKDE1KSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRW4gc2l0dWFjaW9uZXMgZGUgY3Jpc2lzLCBjb21vIGxvcyBjb25mbGljdG9zIGLDqWxpY29zIHkgbGFzIGNhdMOhc3Ryb2ZlcyBuYXR1cmFsZXMsIGxvcyBkZXJlY2hvcyBodW1hbm9zIHNvbiBmcmVjdWVudGVtZW50ZSB2dWxuZXJhZG9zLiBMYSBiaW/DqXRpY2EganVlZ2EgdW4gcGFwZWwgZGVzdGFjYWRvIGVuIGVzdG9zIGNvbnRleHRvcyBhbCBwcm9wb3JjaW9uYXIgdW4gbWFyY28gcGFyYSBldmFsdWFyIHkgYWJvcmRhciBlc3RhcyB2aW9sYWNpb25lcy4gU2Vnw7puIGVsIGFydMOtY3VsbyDigJxEZXJlY2hvcyBIdW1hbm9zIHkgQmlvw6l0aWNhIGVuIENvbmZsaWN0b3MgQsOpbGljb3PigJ0sIHNlIGRlc3RhY2EgcXVlIGxhIHByb3RlY2Npw7NuIGRlIGxhIGRpZ25pZGFkIGh1bWFuYSBkZWJlIHNlciBwcmlvcml0YXJpYSBpbmNsdXNvIGVuIGxhcyBjaXJjdW5zdGFuY2lhcyBtw6FzIGRpZsOtY2lsZXMuIildKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTG9zIGNvbmZsaWN0b3MgYXJtYWRvcyBnZW5lcmFuIHVuIGltcGFjdG8gZGV2YXN0YWRvciBlbiBsYSB2aWRhIGRlIGxhcyBwZXJzb25hcywgbm8gc29sbyBhIG5pdmVsIGbDrXNpY28sIHNpbm8gdGFtYmnDqW4gcHNpY29sw7NnaWNvIHkgc29jaWFsLiBFbiBlbCB2aWRlbyDigJxEZXJlY2hvcyBIdW1hbm9zIHkgZWwgRWrDqXJjaXRvIENvbG9tYmlhbm8gKDIwMTQpLCBzZSBhbmFsaXphbiBlamVtcGxvcyBwdW50dWFsZXMgZGUgY8OzbW8gbGFzIHZpb2xhY2lvbmVzIGEgbG9zIGRlcmVjaG9zIGh1bWFub3Mgc2UgaW50ZW5zaWZpY2FuIGVuIHRpZW1wb3MgZGUgZ3VlcnJhLCB5IGPDs21vIGxhIGJpb8OpdGljYSBwdWVkZSBvZnJlY2VyIHBhdXRhcyBwYXJhIG1pdGlnYXIgZXN0b3MgZWZlY3Rvcy4iKV0pLF9jKCdhJyx7c3RhdGljQ2xhc3M6ImFuZXhvIG1iLTQgYmctd2hpdGUgdy1maXQiLGF0dHJzOnsiaHJlZiI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9eTRvVk9rclp0RTQiLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXZpZGVvLnN2ZyIpfX0pXSksX3ZtLl9tKDE2KV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIgbWItNSJ9LFtfdm0uX20oMTcpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcifSxbX2MoJ0Fjb3JkaW9uQScse2F0dHJzOnsidGlwbyI6ImIifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkxhIGJpb8OpdGljYSBubyBzb2xvIGFiYXJjYSBkaWxlbWFzIG3DqWRpY29zIn19LFtfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIlRpZW5lIHVuIHJvbCBjZW50cmFsIildKSxfdm0uX3YoIiBlbiBsYSBjb25zdHJ1Y2Npw7NuIGRlIHVuYSBzb2NpZWRhZCBtw6FzIGp1c3RhIHkgc29zdGVuaWJsZS4gQWJvcmRhciBsYSBzb3N0ZW5pYmlsaWRhZCwgbGEgZXF1aWRhZCBzb2NpYWwgeSBsb3MgZGVyZWNob3MgaHVtYW5vcyBkZXNkZSBsYSBiaW/DqXRpY2EgZXMgZXNlbmNpYWwgcGFyYSBlbmZyZW50YXIgbG9zIGRlc2Fmw61vcyBhY3R1YWxlcyBlbiB1biBtdW5kbyBnbG9iYWxpemFkby4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiTGEgYmlvw6l0aWNhIG5vIHNlIGxpbWl0YSBhIGRpbGVtYXMgbcOpZGljb3MifX0sW19jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiSnVlZ2EgdW4gcGFwZWwgY2VudHJhbCIpXSksX3ZtLl92KCIgZW4gbGEgY29uc3RydWNjacOzbiBkZSB1bmEgc29jaWVkYWQgbcOhcyBqdXN0YSB5IHNvc3RlbmlibGUuIFNlZ8O6biBlbCBhcnTDrWN1bG8g4oCcQmlvw6l0aWNhIHkgc29zdGVuaWJpbGlkYWQ6IHVuIGVuZm9xdWUgaW50ZWdyYWzigJ0sIGxhIGJpb8OpdGljYSBkZWJlIGFib3JkYXIgbm8gc29sbyBsYSBhdGVuY2nDs24gbcOpZGljYSwgc2lubyB0YW1iacOpbiBsb3MgYXNwZWN0b3Mgc29jaWFsZXMgeSBhbWJpZW50YWxlcyBxdWUgYWZlY3RhbiBhIGxhIGh1bWFuaWRhZC4iKV0pXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVzIHBvciBlc3RvIG5lY2VzYXJpbyBhYm9yZGFyIGxhIGVxdWlkYWQgc29jaWFsIGRlc2RlIGxhIGJpb8OpdGljYSBlcyBlc2VuY2lhbCBwYXJhIGVuZnJlbnRhciBsb3MgZGVzYWbDrW9zIGNvbnRlbXBvcsOhbmVvcy4gRW4gZWwgdmlkZW8g4oCcRWwgQmllbiBDb23Dum4geSBFcXVpZGFkIFNvY2lhbCAoMjAyMynigJ0sIHNlIGRpc2N1dGUgY8OzbW8gbGEgYmlvw6l0aWNhIHB1ZWRlIHNlciB1biBtYXJjbyBwYXJhIGV2YWx1YXIgbGFzIHBvbMOtdGljYXMgcXVlIGFmZWN0YW4gbGEgZGlzdHJpYnVjacOzbiBkZSByZWN1cnNvcyB5IG9wb3J0dW5pZGFkZXMgZW4gbGEgc29jaWVkYWQuIildKSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUJfYlJvQ0p5dWw0IiwidGFyZ2V0IjoiX2JsYW5rIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImFuZXhvX19pY29ubyIsc3R5bGU6KHsnYmFja2dyb3VuZC1jb2xvcic6ICcjRkNERkRCJ30pfSxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby12aWRlby5zdmciKX19KV0pLF92bS5fbSgxOCldKV0sMSldKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiU2UgZXZpZGVuY2lhIHRhbWJpw6luLCBjb21vIGxhIGJpb8OpdGljYSBlc3TDoSBwcm9mdW5kYW1lbnRlIGludGVyY29uZWN0YWRhIGNvbiBsb3MgZGVyZWNob3MgaHVtYW5vcy4gRW4gZWwgYXJ0w61jdWxvIOKAnEJpb8OpdGljYSB5IERlcmVjaG9zIEh1bWFub3MgZW4gdW5hIG1pcmFkYSBsYXRpbm9hbWVyaWNhbmEgZW4gZWwgYyBvbnRleHRvIGdsb2JhbOKAnSwgc2UgYXJndW1lbnRhIHF1ZSB1bmEgcGVyc3BlY3RpdmEgYmlvw6l0aWNhIGVzIGZ1bmRhbWVudGFsIHBhcmEgcHJvbW92ZXIgeSBwcm90ZWdlciBsb3MgZGVyZWNob3MgaHVtYW5vcyBlbiB1biBtdW5kbyBnbG9iYWxpemFkby4gTGEgc29zdGVuaWJpbGlkYWQgeSBsYSBlcXVpZGFkIHNvY2lhbCBzb24gcGlsYXJlcyBlc2VuY2lhbGVzIHBhcmEgbG9ncmFyIGVzdGUgb2JqZXRpdm8uIildKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiQWxndW5vcyBjYXNvcyByZWNvbm9jaWRvcyBzb246IildKSxfdm0uX20oMTkpLF92bS5fbSgyMCldKV0sMSl9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTQgbWItNSIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLWF1dG8ifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTQvMS5wbmciKSwiYWx0IjoiIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJwLTQifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiTcOhcyBhbGzDoSBkZSBsYXMgY3Vlc3Rpb25lcyBtw6lkaWNhcyB5IGJpb2zDs2dpY2FzLCBsYSBiaW/DqXRpY2EgdGFtYmnDqW4gYWJvcmRhIGN1ZXN0aW9uZXMgZ2xvYmFsZXMgY29tbyBsYSBzb3N0ZW5pYmlsaWRhZCBhbWJpZW50YWwsIGxhIGVxdWlkYWQgc29jaWFsIHkgbG9zIGRlcmVjaG9zIGh1bWFub3MuIFVuIGVuZm9xdWUgYmlvw6l0aWNvIHF1ZSB0ZW5nYSBlbiBjdWVudGEgZXN0b3MgdHJlcyBhc3BlY3RvcywgZXMgY3J1Y2lhbCBwYXJhIGdhcmFudGl6YXIgdW4gZnV0dXJvIHNvc3RlbmlibGUgeSBlcXVpdGF0aXZvIHBhcmEgdG9kb3MgbG9zIHNlcmVzIGh1bWFub3MuIExhIGJpb8OpdGljYSBzZSBiYXNhIGVuIGxhIGNyZWVuY2lhIGRlIHF1ZSBsYSBhcGxpY2FjacOzbiBkZSBwcmluY2lwaW9zIMOpdGljb3MgYSBsYSB2aWRhIGltcGxpY2EgbGEgcHJvdGVjY2nDs24gZGVsIG1lZGlvIGFtYmllbnRlLCBhYm9yZGFyIGxhcyBkZXNpZ3VhbGRhZGVzIHNvY2lhbGVzIHkgZGVmZW5kZXIgbG9zIGRlcmVjaG9zIGh1bWFub3MgZnVuZGFtZW50YWxlcy4iKV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tc2VndW5kbyIsYXR0cnM6eyJpZCI6InRfNF8xIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnaDInLFtfYygnc3BhbicsW192bS5fdigiNC4xIildKSxfdm0uX3YoIiBTb3N0ZW5pYmlsaWRhZCIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUgb3JkZXItbGctMiJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtYi00IG1iLWxnLTAiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8yLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG9yZGVyLWxnLTEifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJMYSBzb3N0ZW5pYmlsaWRhZCBlbiBsYSBiaW/DqXRpY2EsIGltcGxpY2EgcXVlIGxhcyBkZWNpc2lvbmVzIMOpdGljYXMgeSBsYXMgcHLDoWN0aWNhcyBwcm9mZXNpb25hbGVzIGRlYmVuIGNvbnNpZGVyYXIgZWwgaW1wYWN0bywgYSBsYXJnbyBwbGF6bywgc29icmUgZWwgbWVkaW8gYW1iaWVudGUgeSBsYSBjYXBhY2lkYWQgZGUgbGFzIGZ1dHVyYXMgZ2VuZXJhY2lvbmVzIHBhcmEgc2F0aXNmYWNlciBzdXMgbmVjZXNpZGFkZXMuIEVzIGFzw60gY29tbyBzdXJnZSBsYSByZWxhY2nDs24gZW50cmUgbGEgw6l0aWNhIGRlbCBjdWlkYWRvIHkgbGEgcHJlc2VydmFjacOzbiBkZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzLCBtZW5jaW9uYW5kbyBjw7NtbyBsb3MgcHJvZmVzaW9uYWxlcyBkZSBsYSBzYWx1ZCBkZWJlbiB0ZW5lciBlbiBjdWVudGEgZWwgaW1wYWN0byBlY29sw7NnaWNvIGVuIHN1cyBwcsOhY3RpY2FzOyBwb2RlbW9zIHRvbWFyIGVuIGN1ZW50YSBsb3MgYXBvcnRlcyBkZSBQw6lyZXogVG9ybyAoMjAxNiksIHF1aWVuIGFyZ3VtZW50YSBxdWUgbGEgZ2xvYmFsaXphY2nDs24gaGEgaW50ZW5zaWZpY2FkbyBsYSBleHBsb3RhY2nDs24gZGUgbG9zIHJlY3Vyc29zIG5hdHVyYWxlcywgbG8gcXVlIHBsYW50ZWEgc2VyaW9zIHJldG9zIMOpdGljb3Mgc29icmUgZWwgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMiBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkRlc2RlIHVuYSBwZXJzcGVjdGl2YSBiaW/DqXRpY2EsIGxhIHNvc3RlbmliaWxpZGFkIGltcGxpY2Egbm8gc29sbyBsYSBwcmVzZXJ2YWNpw7NuIGFtYmllbnRhbCwgc2lubyB0YW1iacOpbiBsYSBvYmxpZ2FjacOzbiBtb3JhbCBkZSBnYXJhbnRpemFyIHF1ZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzIHNlYW4gdXRpbGl6YWRvcyBkZSBtYW5lcmEganVzdGEsIHBhcmEgcXVlIGxhcyBmdXR1cmFzIGdlbmVyYWNpb25lcyBwdWVkYW4gYmVuZWZpY2lhcnNlIGRlIGVsbG9zLiBFc3RhIHZpc2nDs24gZXN0w6EgYWxpbmVhZGEgY29uIGxvcyBwcmluY2lwaW9zIGRlIGVxdWlkYWQgaW50ZXJnZW5lcmFjaW9uYWwgeSByZXNwb25zYWJpbGlkYWQgY29sZWN0aXZhLiIpXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01In0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzQucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcifSxbX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIlDDqXJleiBUb3JvIHRhbWJpw6luIHJlc2FsdGEgcXVlIGVsIGltcGFjdG8gZWNvbMOzZ2ljbyB5IGVsIGNhbWJpbyBjbGltw6F0aWNvIHNvbiBwcm9ibGVtYXMgZ2xvYmFsZXMgcXVlIGV4aWdlbiByZXNwdWVzdGFzIMOpdGljYXMgeSBjb2xhYm9yYXRpdmFzIGRlIHRvZG9zIGxvcyBzZWN0b3JlcywgaW5jbHVpZGFzIGxhcyBwcm9mZXNpb25lcyBxdWUgaW50ZWdyYW4gbGEgYmlvw6l0aWNhLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMSBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8zLnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkxvcyBwcm9mZXNpb25hbGVzIGRlIGxhIHNhbHVkIHkgZGUgbGFzIGNpZW5jaWFzIGRlYmVuIGNvbnNpZGVyYXIgbGEgc29zdGVuaWJpbGlkYWQgY29tbyB1biBwcmluY2lwaW8gcmVjdG9yIGVuIHN1cyBwcsOhY3RpY2FzIGNvdGlkaWFuYXMsIHByb21vdmllbmRvIHBvbMOtdGljYXMgeSBlc3RyYXRlZ2lhcyBxdWUgbWluaW1pY2VuIGxvcyBkYcOxb3MgYW1iaWVudGFsZXMgeSBtYXhpbWljZW4gZWwgYmllbmVzdGFyIGEgbGFyZ28gcGxhem8gZGUgbGFzIHNvY2llZGFkZXMgaHVtYW5hcyB5IGxvcyBlY29zaXN0ZW1hcy4gIildKV0pXSldKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiQWRlbcOhcywgbGEgYmlvw6l0aWNhIGRlYmUgcmVmbGV4aW9uYXIgc29icmUgZWwgaW1wYWN0byBkZWwgY29uc3VtaXNtbyB5IGVsIHVzbyBpbmRpc2NyaW1pbmFkbyBkZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzLCBhbWJvcyBhY2VsZXJhZG9zIHBvciBlbCBwcm9jZXNvIGRlIGdsb2JhbGl6YWNpw7NuLiBEZSBhY3VlcmRvIGNvbiBQw6lyZXogVG9ybyAoMjAxNiksIGVzIGZ1bmRhbWVudGFsIHF1ZSBzZSBwcm9tdWV2YW4gcG9sw610aWNhcyBxdWUgZnJlbmVuIGxhIGV4cGxvdGFjacOzbiBkZSByZWN1cnNvcywgYXNlZ3VyYW5kbyB1biBkZXNhcnJvbGxvIGVxdWl0YXRpdm8geSBzb3N0ZW5pYmxlIHF1ZSBwZXJtaXRhIG1hbnRlbmVyIGVsIGVxdWlsaWJyaW8gZWNvbMOzZ2ljbyBnbG9iYWwuIildKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1zdHJldGNoIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHB4LTQgcHktNSBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gZC1ibG9jayBtYi00IixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC81LnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJtYi0yIHRleHQtY2VudGVyIn0sW192bS5fdigiR2VzdGnDs24gw6l0aWNhIGRlbCBhZ3VhIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiRWwgdXNvIGRlbCBhZ3VhIGRlYmUgcHJpb3JpemFyIHRhbnRvIGVsIGFjY2VzbyBlcXVpdGF0aXZvIGNvbW8gbGEgY29uc2VydmFjacOzbi4gUG9yIGVqZW1wbG8sIGxvcyBzaXN0ZW1hcyBkZSByZWNpY2xhamUgZGUgYWd1YSB5IGxhIGRpc3RyaWJ1Y2nDs24gZXF1aXRhdGl2YSBlbiByZWdpb25lcyBjb24gZXNjYXNleiByZXNwb25kZW4gYSB1bmEgZGVtYW5kYSBiaW/DqXRpY2EgcG9yIGxhIGp1c3RpY2lhIGFtYmllbnRhbC4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzYuc3ZnIiksImFsdCI6IiJ9fSksX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6Im1iLTIgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJFbmVyZ8OtYSBzb3N0ZW5pYmxlIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiTGEgdHJhbnNpY2nDs24gaGFjaWEgZnVlbnRlcyBkZSBlbmVyZ8OtYSByZW5vdmFibGVzLCBjb21vIGxhIHNvbGFyIHkgZcOzbGljYSwgZXMgdml0YWwgcGFyYSByZWR1Y2lyIGxhIGh1ZWxsYSBkZSBjYXJib25vIHkgcHJvdGVnZXIgbGEgc2FsdWQgcGxhbmV0YXJpYSB5IGh1bWFuYS4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0Lzcuc3ZnIiksImFsdCI6IiJ9fSksX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6Im1iLTIgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJBbGltZW50YWNpw7NuIHJlc3BvbnNhYmxlIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiRWwgaW1wdWxzbyBoYWNpYSBsYSBwcm9kdWNjacOzbiB5IGNvbnN1bW8gZGUgYWxpbWVudG9zIG9yZ8Ohbmljb3MgeSBsb2NhbGVzIGVzIG90cm8gZWplbXBsbyBkZSB1bmEgcHLDoWN0aWNhIHNvc3RlbmlibGUgcXVlIGN1aWRhIHRhbnRvIGVsIG1lZGlvIGFtYmllbnRlIGNvbW8gbGEgc2FsdWQgcMO6YmxpY2EuIildKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01In0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im10LTQgbXQtbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzgucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTQvOS5wbmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19fdGV4dG8ifSxbX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJWaWRlby4gIildKSxfdm0uX3YoIiDDiXRpY2EgYW1iaWVudGFsIGUgaGlzdG9yaWEgYW1iaWVudGFsLiBEci4gSHVtYmVydG8gVXJxdWl6YSIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImFuZXhvX190ZXh0byJ9LFtfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIlZpZGVvLiAiKV0pLF92bS5fdigiIMK/UXXDqSB0aWVuZSBxdWUgdmVyIGxhIHByb2R1Y2Npw7NuIGluZHVzdHJpYWwgZGUgY2FybmUgY29uIGxhIGNyaXNpcyBjbGltw6F0aWNhPyAiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19fdGV4dG8ifSxbX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJWaWRlby4gIildKSxfdm0uX3YoIiBMYXMgY2xhdmVzIGRlbCBjYW1iaW8gY2xpbcOhdGljbyIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF80XzIiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCI0LjIiKV0pLF92bS5fdigiIFNvc3RlbmliaWxpZGFkIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSBvcmRlci1sZy0yIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1iLTQgbWItbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzExLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG9yZGVyLWxnLTEifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci0xIHAtNCBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1zdGFydCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy1hdXRvIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzEwLnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkVzdGUgdGVtYSBwdWVkZSBhYm9yZGFyc2UsIGRlc3RhY2FuZG8gY8OzbW8gbGFzIGRlc2lndWFsZGFkZXMgZ2xvYmFsZXMgc29uIHVuIGRlc2Fmw61vIMOpdGljby4gRmxvcmVzIEN1ZXZhcyAoMjAxNikgbWVuY2lvbmEgcXVlIGxvcyBwcm9mZXNpb25hbGVzIGRlIGxhIHNhbHVkIGRlYmVuIHJlY29ub2NlciB5IGFib3JkYXIgbGFzIGRlc2lndWFsZGFkZXMgcXVlIGFmZWN0YW4gZWwgYmllbmVzdGFyIGRlIGxhcyBjb211bmlkYWRlcyBtw6FzIHZ1bG5lcmFibGVzIGNvbW8sIHBvciBlamVtcGxvLCBsYSBkaXN0cmlidWNpw7NuIGRlIHZhY3VuYXMgeSBsYSBwcmVjYXJpYSBhdGVuY2nDs24gZW4gcmVnaW9uZXMgc3ViZGVzYXJyb2xsYWRhcy4gIildKV0pXSldKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTGEgZXF1aWRhZCBzb2NpYWwsIGVuIGVsIGNvbnRleHRvIGRlIGxhIGJpb8OpdGljYSwgaW1wbGljYSBhc2VndXJhciBxdWUgdG9kYXMgbGFzIHBlcnNvbmFzIHRlbmdhbiBsYXMgbWlzbWFzIG9wb3J0dW5pZGFkZXMgZGUgYWNjZWRlciBhIGxvcyByZWN1cnNvcyBzYW5pdGFyaW9zIHkgdGVjbm9sw7NnaWNvcywgaW5kZXBlbmRpZW50ZW1lbnRlIGRlIHN1IGNvbnRleHRvIGVjb27Ds21pY28sIHNvY2lhbCBvIGdlb2dyw6FmaWNvLiBMYSBiaW/DqXRpY2EgYnVzY2EgcmVkdWNpciBsYXMgYmFycmVyYXMgcXVlIHBlcnBldMO6YW4gZGVzaWd1YWxkYWRlcyBlbiBlbCBhY2Nlc28gYSBsYSBhdGVuY2nDs24gbcOpZGljYSwgcHJvbW92aWVuZG8ganVzdGljaWEgeSBlcXVpZGFkLiIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1mb25kby0xIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBweC1tZC01IHBiLW1kLTMifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiRWwgY29uY2VwdG8gZGUgcGF6IGVzIG11Y2hvIG3DoXMgYW1wbGlvIHF1ZSBsYSBzaW1wbGUgYXVzZW5jaWEgZGUgY29uZmxpY3RvIG8gdmlvbGVuY2lhLiBFbiBsb3MgZXN0dWRpb3MgZGUgcGF6IHkgcmVzb2x1Y2nDs24gZGUgY29uZmxpY3RvcywgcmVzdWx0YSBlc2VuY2lhbCBkaXN0aW5ndWlyIGVudHJlIGxhIHBheiBuZWdhdGl2YSB5IGxhIHBheiBwb3NpdGl2YSwgdMOpcm1pbm9zIGRlc2Fycm9sbGFkb3MgcG9yIEpvaGFuIEdhbHR1bmcgKDE5OTYpLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtc3RyZXRjaCBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTYgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9faW1hZ2UiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8xMi5wbmciKSwiYWx0IjoiIn19KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX190ZXh0IHAtNCJ9LFtfYygnaDQnLHtzdGF0aWNDbGFzczoibWItMiB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkRpc3BhcmlkYWRlcyBlbiBsYSBhdGVuY2nDs24gZGUgc2FsdWQiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJMYXMgcG9ibGFjaW9uZXMgcnVyYWxlcyBzdWVsZW4gdGVuZXIgbWVub3MgYWNjZXNvIGEgc2VydmljaW9zIG3DqWRpY29zIGVzcGVjaWFsaXphZG9zIGVuIGNvbXBhcmFjacOzbiBjb24gw6FyZWFzIHVyYmFuYXMuIildKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy02IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLWRvd24ifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9faW1hZ2UiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8xMy5wbmciKSwiYWx0IjoiIn19KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX190ZXh0IHAtNCJ9LFtfYygnaDQnLHtzdGF0aWNDbGFzczoibWItMiB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkFjY2VzbyBhIHRlcmFwaWFzIGF2YW56YWRhcyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkxhcyBtaW5vcsOtYXMgeSBncnVwb3MgdnVsbmVyYWJsZXMsIG5vcm1hbG1lbnRlIGVuZnJlbnRhbiBkaWZpY3VsdGFkZXMgcGFyYSBhY2NlZGVyIGEgdHJhdGFtaWVudG9zIG3DqWRpY29zIGF2YW56YWRvcyBvIHRlcmFwaWFzIGlubm92YWRvcmFzIGRlYmlkbyBhIGRlc2lndWFsZGFkZXMgZWNvbsOzbWljYXMgbyBzb2NpYWxlcy4iKV0pXSldKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzRfMyIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjQuMyIpXSksX3ZtLl92KCIgRGVyZWNob3MgaHVtYW5vcyIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01IG9yZGVyLWxnLTIifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWItNCBtYi1sZy0wIixhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTQvMTUucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMSBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8xNC5zdmciKX19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJFcyBmdW5kYW1lbnRhbCBhbmFsaXphciBjw7NtbyBsb3MgZGVyZWNob3MgaHVtYW5vcyBzb24gdnVsbmVyYWRvcyBlbiBzaXR1YWNpb25lcyBkZSBjcmlzaXMsIGNvbW8gbG9zIGNvbmZsaWN0b3MgYsOpbGljb3MgbyBsYXMgY2F0w6FzdHJvZmVzIG5hdHVyYWxlcywgeSBlbCBwYXBlbCBxdWUgZGVzZW1wZcOxYSBsYSBiaW/DqXRpY2EgZW4gdGFsZXMgY29udGV4dG9zLiIpXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19fdGV4dG8ifSxbX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJWaWRlby4gIildKSxfdm0uX3YoIiBEZXJlY2hvcyBIdW1hbm9zIHkgZWwgRWrDqXJjaXRvIENvbG9tYmlhbm8iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtYi00IG1iLWxnLTAiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8xNi5wbmciKSwiYWx0IjoiIn19KV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19fdGV4dG8ifSxbX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJWaWRlby4gIildKSxfdm0uX3YoIiDigJxFbCBCaWVuIENvbcO6biB5IEVxdWlkYWQgU29jaWFsXCIgU1VTVEVOVEFDScOTTiBERSBNT05PR1JBRsONQSBCSU/DiVRJQ0EgIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1mb25kby0xIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBweC1tZC01IHBiLW1kLTMifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiRWwgY29uY2VwdG8gZGUgcGF6IGVzIG11Y2hvIG3DoXMgYW1wbGlvIHF1ZSBsYSBzaW1wbGUgYXVzZW5jaWEgZGUgY29uZmxpY3RvIG8gdmlvbGVuY2lhLiBFbiBsb3MgZXN0dWRpb3MgZGUgcGF6IHkgcmVzb2x1Y2nDs24gZGUgY29uZmxpY3RvcywgcmVzdWx0YSBlc2VuY2lhbCBkaXN0aW5ndWlyIGVudHJlIGxhIHBheiBuZWdhdGl2YSB5IGxhIHBheiBwb3NpdGl2YSwgdMOpcm1pbm9zIGRlc2Fycm9sbGFkb3MgcG9yIEpvaGFuIEdhbHR1bmcgKDE5OTYpLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtc3RyZXRjaCBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTYgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9faW1hZ2UiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hNC8xNy5wbmciKSwiYWx0IjoiIn19KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX190ZXh0IHAtNCJ9LFtfYygnaDQnLHtzdGF0aWNDbGFzczoibWItMiB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkFidXNvcyBlbiBlbnNheW9zIGNsw61uaWNvcyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkhpc3TDs3JpY2FtZW50ZSwgbG9zIGVuc2F5b3MgY2zDrW5pY29zIG5vIMOpdGljb3MgaGFuIGV4cGxvdGFkbyBhIGdydXBvcyB2dWxuZXJhYmxlcywgY29tbyBlbCBjYXNvIGRlIGxhIHPDrWZpbGlzIGVuIFR1c2tlZ2VlLCBkb25kZSBzZSBuZWfDsyB0cmF0YW1pZW50byBhIHBhY2llbnRlcyBhZnJvYW1lcmljYW5vcy4iKV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTYgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tZG93biJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZCBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX19pbWFnZSIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzE4LnBuZyIpLCJhbHQiOiIifX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmRfX3RleHQgcC00In0sW19jKCdoNCcse3N0YXRpY0NsYXNzOiJtYi0yIHRleHQtY2VudGVyIn0sW192bS5fdigiTWFsdHJhdG8gYSBncnVwb3MgdnVsbmVyYWJsZXMiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJMYXMgY29tdW5pZGFkZXMgbWFyZ2luYWRhcyBhIG1lbnVkbyBoYW4gc2lkbyBvYmpldG8gZGUgZXN0dWRpb3MgbcOpZGljb3Mgc2luIHN1IGNvbnNlbnRpbWllbnRvIG8gY29tcHJlbnNpw7NuIGFkZWN1YWRhIGRlIGxvcyByaWVzZ29zLiIpXSldKV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci00IG1iLTUiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy1hdXRvIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWE0LzE5LnBuZyIpLCJhbHQiOiIifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNCJ9LFtfYygnaDQnLHtzdGF0aWNDbGFzczoibWItMiIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiTm9ybWF0aXZhcyBpbnRlcm5hY2lvbmFsZXMiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfdm0uX3YoIkNvbnZlbmNpb25lcyB5IHRyYXRhZG9zLCBjb21vIGxhIERlY2xhcmFjacOzbiBVbml2ZXJzYWwgc29icmUgQmlvw6l0aWNhIHkgRGVyZWNob3MgSHVtYW5vcyBkZSBsYSBVTkVTQ08geSBlbCBQYWN0byBJbnRlcm5hY2lvbmFsIGRlIERlcmVjaG9zIENpdmlsZXMgeSBQb2zDrXRpY29zLCBwcm9tdWV2ZW4gbGEgcHJvdGVjY2nDs24gZGUgbG9zIGRlcmVjaG9zIGh1bWFub3MgZW4gbGEgYmlvw6l0aWNhLiBFc3RhcyBub3JtYXRpdmFzIGVzdGFibGVjZW4gZGlyZWN0cmljZXMgcGFyYSBnYXJhbnRpemFyIHF1ZSBsYSBpbnZlc3RpZ2FjacOzbiB5IGVsIHRyYXRhbWllbnRvIGVuIHNhbHVkIHNlIHJlYWxpY2VuIGRlIG1hbmVyYSDDqXRpY2EgeSByZXNwZXR1b3NhIGRlIGxhIGRpZ25pZGFkIGh1bWFuYSAoU2lsdmVpcmEgR29yc2tpICYgTcOpbmRleiBCYWlnZXMsIDIwMTUpLiAiKV0pXSldKV0pXSl9XQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}